<!DOCTYPE html>
<html lang="en">
<head>
    <style>
    body { width: 98%; text-align: center;} /* background-color: #f0c040;}*/

    </style>

    <title id='Description'>Inventory</title>

    <!-- css/site.css will be rewritten by apache to salumi.css or plancha.css, etc depending on virtual host.
      see rewrite rule in apache configuration files-->
    <link rel="stylesheet" href="css/site.css?ver=2" type="text/css" />

    <link rel="stylesheet" href="jq453/jqwidgets/styles/jqx.base.css" type="text/css" />
    <link rel="stylesheet" href="jq453/jqwidgets/styles/jqx.darkblue.css" type="text/css" />

    <script type="text/javascript" src="jq453/scripts/jquery-1.11.2.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxcore.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxdata.js"></script> 
    <script type="text/javascript" src="jq453/jqwidgets/jqxbuttons.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxscrollbar.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxmenu.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.edit.js"></script>  
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.selection.js"></script> 
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.grouping.js"></script> 
    <script type="text/javascript" src="jq453/jqwidgets/jqxlistbox.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxdropdownlist.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxcheckbox.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxcalendar.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxnumberinput.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxdatetimeinput.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/globalization/globalize.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.sort.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.filter.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxpanel.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxnumberinput.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.columnsresize.js"></script> 
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.columnsreorder.js"></script> 
    <script type="text/javascript" src="jq453/jqwidgets/jqxwindow.js"></script>

    <script type="text/javascript" src="js/printing/epos-print-4.1.0.js"></script>
    <script type="text/javascript" src="js/printing/print.js?ver67"></script>

    <script type="text/javascript">
        
        function not_empty(cell, value){
          if (value == null || !value.trim()){
            return false;
          }

          return true;
        }  

        function open_custom_text_area(row, fieldName) {
          //set these globals so we know where to save data when
          //save is clicked after popup is edited
          editrow = row;
          editFieldName = fieldName;

          //set the popups value to current contents of field
          var text = $("#jqxgrid").jqxGrid('getcellvalue', row, fieldName);
          $("#customTextArea").val(text);

          //position and show the popupWindow
          var offset = $("#jqxgrid").offset();
          $("#popupWindow").jqxWindow({ position: { x: parseInt(offset.left) + 60, y: parseInt(offset.top) + 60 } });
          $("#popupWindow").jqxWindow('open');
          return false;
        }

        var query = window.location.search.substring(1); //substring(1) to remove the '?' at start
        console.log(query);
        if (query.match(/=/)){
          var data_url = "inventory.py/seek?" + query;
        }
        else {
          var data_url = "inventory.py/search?key=" + query;
        }

        console.log("data url: "+data_url);

        $(document).ready(function () {
            var theme = 'yellowgreen';

            edits = {};
            unfinished_edits = {};

            var source =
            {
                datatype: "json",
                datafields: [
                    { name: 'name',           type: 'string' },
                    { name: 'display_name',         type: 'string' },
                    { name: 'supercategory',       type: 'string' },
                    { name: 'category',       type: 'string' },
                    { name: 'subcategory',       type: 'string' },
                    { name: 'retail_price',     type: 'float' },
                    { name: 'qtprice',        type: 'number' },
                    { name: 'scalable',        type: 'boolean' },
                    { name: 'add_on',        type: 'boolean' },
                    { name: 'tax',            type: 'string' },
                    { name: 'wholesale_price',      type: 'float' },
                    { name: 'supplier',       type: 'string' },
                    { name: 'bin',            type: 'string' },
                    { name: 'listorder',      type: 'number' },
                    { name: 'upc',         type: 'string' },
                    { name: 'description',         type: 'string' },
                    { name: 'extra',         type: 'string' },
                    { name: 'active',         type: 'boolean' },
                    { name: 'units_in_stock', type: 'float' },
                    { name: 'inventory_date', type: 'date' },
                    { name: 'estimated_units_remaining', type: 'string' },
                    { name: 'mynotes',        type: 'string' },
                    { name: 'id', type: 'int' },
                ],
                url: data_url,
                updaterow: function (rowid, rowdata, commit) {
                  commit(true);
                },
                deleterow: function (rowid, rowdata, commit) {
                  commit(true);
                },
            };
            var dataAdapter = new $.jqx.dataAdapter(source); 
            // create jqxgrid.
            $("#jqxgrid").jqxGrid(
            {
                columnsresize: true,
                columnsreorder: true,
                editable: true,
                width: '100%',
                height: 550,
                source: dataAdapter,
                theme: theme,
                selectionmode: 'multiplecellsadvanced',
                sortable: true,
                filterable: true,
                groupable: true,
                altrows: true,
                ready: function () {
                    $('#jqxgrid').jqxGrid('autoresizecolumns');
                },
                columns: [
                    { text: 'supercategory',  datafield: 'supercategory', width: 60},
                    { text: 'category',    datafield: 'category', width:90},
                    { text: 'name',       datafield: 'name',  width:210},
                    { text: 'display_name',  datafield: 'display_name',  width:210},
                    { text: 'bin',        datafield: 'bin', width:60  },
                    { text: 'listorder',  datafield: 'listorder',  columntype: 'numberinput' , width:60 },
                    { text: 'wholesale', datafield: 'wholesale_price', columntype: 'floatinput' , width: 60 },
                    { text: 'retail price',  datafield: 'retail_price',  columntype: 'floatinput' , width:60 },
                    { text: 'qtprice',    datafield: 'qtprice',    columntype: 'numberinput' , width: 60 },
                    { text: 'scalable',    datafield: 'scalable', columntype: 'checkbox', width: 30},
                    { text: 'add_on',    datafield: 'add_on', columntype: 'checkbox', width: 30},
                    { text: 'tax',  datafield: 'tax', width:90 },
                    { text: 'supplier',   datafield: 'supplier', width:90 },
                    { text: 'upc',   datafield: 'upc'},
                    { text: 'estimated_units_remaining', datafield: 'estimated_units_remaining', editable: false , width:90 }, 
                    { text: 'units_in_stock',datafield: 'units_in_stock', columntype: 'floatinput' , width:90 },
                    { text: 'inventory_date',datafield: 'inventory_date', columntype: 'datetimeinput', cellsformat: 'yyyy-MM-dd', width:90},
                    { text: 'subcategory', datafield: 'subcategory', width:60  },
                    { text: 'description',  datafield: 'description',
                        cellbeginedit: function (row) { return open_custom_text_area(row, 'description')}
                    },
                    { text: 'extra',  datafield: 'extra',
                        cellbeginedit: function (row) { return open_custom_text_area(row, 'extra')}
                    },
                    { text: 'mynotes', datafield: 'mynotes', 
                        cellbeginedit: function (row) { return open_custom_text_area(row, 'mynotes')}
                    },
                ]
            });
            // initialize the popup window and buttons.
            $("#popupWindow").jqxWindow({
                width: 450, height: 400, resizable: false,  isModal: true, autoOpen: false, cancelButton: $("#Cancel"), modalOpacity: 0.01           
            });

            $("#popupWindow").on('open', function () {
                $('#jqxgrid').jqxGrid('focus');//.jqxInput('selectAll');
            });
         
            $("#Cancel").jqxButton({ theme: theme });
            $("#Save").jqxButton({ theme: theme });

            // update the edited row when the user clicks the 'Save' button.
            $("#Save").click(function () {
                if (editrow >= 0) {
                    console.log(`${editFieldName} save`);
                    $("#jqxgrid").jqxGrid('setcellvalue', editrow, editFieldName, customTextArea.value);
                    $("#popupWindow").jqxWindow('hide');
                    customTextArea.value = null;
                }
            });

            $("#jqxgrid").on('cellvaluechanged', function (event) {
              args = event.args;
              var database_id = $("#jqxgrid").jqxGrid('getcellvalue', args.rowindex, 'id');
              if (!(args.rowindex in edits)) {
                  edits[args.rowindex] = {};
                  if (database_id == null) {newrow();}
              }
              var required_fields= ['supercategory', 'category', 'name'];
              if (database_id != null && required_fields.includes(args.datafield) && (args.newvalue == null || !args.newvalue.trim()))
              {
                $("#jqxgrid").jqxGrid('setcellvalue', args.rowindex, args.datafield, args.oldvalue);
              }

              edits[args.rowindex][args.datafield] = args.newvalue;
              console.log(`${args.rowindex}:${edits[args.rowindex][args.datafield]} = ${args.newvalue}`);

              if (args.datafield == 'units_in_stock') {
                 $("#jqxgrid").jqxGrid('setcellvalue', args.rowindex, 'inventory_date', new Date());
               } 
 
            });

            // create new row.
            
            function newrow() {
                commit = $("#jqxgrid").jqxGrid('addrow', 0, {'id': null});
            }

            $('#submiteditsbutton').jqxButton({ height: 25, theme: theme });


            $('#submiteditsbutton').click(function () {
                alert(JSON.stringify(edits));
                var newrows = {};
                var updaterows = {};

                // sort the edits into either newrows, updaterows
                // or unfinished_edits
                for (idx in edits){
                  var row = edits[idx];
                  var database_id = $("#jqxgrid").jqxGrid('getcellvalue', idx, 'id');
                  //if new row, it must have necessary keys with good values
                  if (database_id == null ) //&& row['supercategory'] && row['name'] && row['catgeory'])
                  {
                      newrows[idx] = row;
                  } 
                  else //if (database_id != null)
                  {
                    updaterows[database_id] = row;
                  }
                  //else{ 
                  //  unfinished_edits[idx] = row; 
                  //}
                }
                doit = confirm(`Updated ${Object.keys(updaterows).length} row(s) 
                  \nAdded ${Object.keys(newrows).length} 
                  \n ${Object.keys(unfinished_edits).length} new rows unsendable due to missing 'supercategory|category|name'`);

                // synchronize with the server - send update command
                // call commit with parameter true if the synchronization with the server is successful 
                // and with parameter false if the synchronization failed.

                if (doit)
                {
                  $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: "inventory.py/update",
                    data: {'edits' : JSON.stringify(updaterows), 'newrows': JSON.stringify(newrows)},
                    cache: false,
                    success: function (newids, status, xhr) {
                        // update command is executed.
                        edits = unfinished_edits; // these remain to be sent (after fixing by user)
                        unfinished_edits = {};
                        for(var idx in newids)
                        {
                          var datarow = $("#jqxgrid").jqxGrid('getrowdata', idx);
                          datarow.id = newids[idx];
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        document.write("<p>"+textStatus + ":::" + errorThrown + "</p>" + jqXHR.responseText)
                        alert(textStatus + ":::" + errorThrown + "\n" + jqXHR.responseText);
			                  errWindow = window.open("","MsgWindow","width=200,height=100");
                        errWindow.document.write("<p>"+textStatus + ":::" + errorThrown + "</p>" + jqXHR.responseText);
                        commit(false);
                    }
                  });
                }
            });

            $('#postmenubutton').click(function () {
                  $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: "menu.py/generate_and_post",
                    cache: false,
                    async: false,
                    success: function (status, xhr) {
                      alert("done");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        document.write("<p>"+textStatus + ":::" + errorThrown + "</p>" + jqXHR.responseText)
                        alert(textStatus + ":::" + errorThrown + "\n" + jqXHR.responseText);
			                  errWindow = window.open("","MsgWindow","width=200,height=100");
                        errWindow.document.write("<p>"+textStatus + ":::" + errorThrown + "</p>" + jqXHR.responseText);
                        commit(false);
                    }
                  });
            });

            $('#printinventorybutton').click(function () {
                  console.log(query); //window.location.search.match(/[^\?].*$/g));
                  $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: "print_wine_inventory.py/go",
                    data: {'query': ''+query},
                    cache: false,
                    success: function (pwi_data, pwi_status, pwi_xhr) {
			  $.ajax({
			    type: "GET",
			    datatype: "json",
			    url: "config.py/get",
			    cache: false,
			    success: function (cfg_data, cfg_status, cfg_xhr) {
                              cfg_data = JSON.parse(cfg_data);
			      print(pwi_data, cfg_data.printer.ipaddr, cfg_data.printer.devid, cfg_data.printer.timeout);
			    },
			    error: err_page
                  	});
                    },
                    error: err_page
                  });
            });

            $("#jqxgrid").on("bindingcomplete", function (event) {
            // add one blank row at the end to start for new
            // items to be entered. 
            // when that one is editted, we'll add another, and so on.
              newrow();
            });

        });

        function err_page(jqxhr, textstatus, errorthrown) {
          //console.log(textstatus + ":::" + errorthrown + "\n" + jqxhr.responsetext);
          document.write("<p>"+textstatus + ":::" + errorthrown + "</p>" + jqxhr.responsetext);
          errwindow = window.open("","msgwindow","width=200,height=100");
          errwindow.document.write("<p>"+textstatus + ":::" + errorthrown + "</p>" + jqxhr.responsetext);
        }
    </script>
</head>
<body class='default'>
        <center><input value="submit changes" id="submiteditsbutton" type="button" style='margin:20px' />
        <input value="print inventory" id="printinventorybutton" type="button" style='margin:20px' />
        <input value="post menu" id="postmenubutton" type="button" style='margin:20px' />
        </center>
        <div id="jqxgrid">
        </div>
       <div id="popupWindow">
            <div>Edit</div>
            <div style="overflow: hidden;">
              <textarea rows=20 cols=50 id="customTextArea"></textarea>
              <input style="margin-right: 5px;" type="button" id="Save" value="Save" /><input id="Cancel" type="button" value="Cancel" />
            </div>
       </div>
</body>
</html>
