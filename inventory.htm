<!DOCTYPE html>
<html lang="en">
<head>
    <style>
    body { width: 98%; text-align: center; background-color: #f0c040;}
    #rustomTextArea {position: fixed; top: 0; left: 0; z-index:100;}

    </style>

    <title id='Description'>Inventory
    </title>
    <link rel="stylesheet" href="jq453/jqwidgets/styles/jqx.base.css" type="text/css" />
    <link rel="stylesheet" href="jq453/jqwidgets/styles/jqx.darkblue.css" type="text/css" />

    <script type="text/javascript" src="jq453/scripts/jquery-1.11.2.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxcore.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxdata.js"></script> 
    <script type="text/javascript" src="jq453/jqwidgets/jqxbuttons.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxscrollbar.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxmenu.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.edit.js"></script>  
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.selection.js"></script> 
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.grouping.js"></script> 
    <script type="text/javascript" src="jq453/jqwidgets/jqxlistbox.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxdropdownlist.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxcheckbox.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxcalendar.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxnumberinput.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxdatetimeinput.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/globalization/globalize.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.sort.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.filter.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxpanel.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxnumberinput.js"></script>
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.columnsresize.js"></script> 
    <script type="text/javascript" src="jq453/jqwidgets/jqxgrid.columnsreorder.js"></script> 
    <script type="text/javascript" src="jq453/jqwidgets/jqxwindow.js"></script>

    <script type="text/javascript" src="js/printing/epos-print-4.1.0.js"></script>
    <script type="text/javascript" src="js/printing/print.js?ver67"></script>

    <script type="text/javascript">

        var query = window.location.search.match(/[^\?].*$/g);

        $(document).ready(function () {
            
            var theme = 'yellowgreen';

            lastedit = null;
            edits = {};
            newrows = {};
            var source =
            {
                datatype: "json",
                datafields: [
                    { name: 'name',           type: 'string' },
                    { name: 'supercategory',       type: 'string' },
                    { name: 'category',       type: 'string' },
                    { name: 'subcategory',       type: 'string' },
                    { name: 'retail_price',     type: 'float' },
                    { name: 'qtprice',        type: 'number' },
                    { name: 'scalable',        type: 'boolean' },
                    { name: 'add_on',        type: 'boolean' },
                    { name: 'tax',            type: 'string' },
                    { name: 'wholesale_price',      type: 'float' },
                    { name: 'supplier',       type: 'string' },
                    { name: 'bin',            type: 'string' },
                    { name: 'listorder',      type: 'number' },
                    { name: 'upc',         type: 'string' },
                    { name: 'description',         type: 'string' },
                    { name: 'active',         type: 'boolean' },
                    { name: 'units_in_stock', type: 'float' },
                    { name: 'inventory_date', type: 'date' },
                    { name: 'estimated_units_remaining', type: 'string' },
                    { name: 'mynotes',        type: 'string' },
                    { name: 'id', type: 'int' },
                ],
                url: "inventory.py/get_" + query,
                //editurl: 'http://localhost/getwine.py/',
                updaterow: function (rowid, rowdata, commit) {
                    console.log('updaterow: ' + rowid + ': ' + JSON.stringify(rowdata));
                    if (lastedit == null) return;
                    
                    isnewrow = (rowdata.id == undefined) 
                    if (isnewrow) {
                      if (!(rowid in newrows)) {
                        // first time edited,blank row now being
                        // used. Add new blank row
                        newrow();
                      }  

                      newrows[rowid] = rowdata;
                      row = newrows[rowid];
                    }
                    else {
                      if (!(rowdata.id in edits)) {edits[rowdata.id] = {};}
                      edits[rowdata.id][lastedit.datafield] = lastedit.value;
                      row = edits[rowdata.id];
                    }

                    commit(true);

                    if (lastedit.datafield == 'units_in_stock')
                    {
                      rowindex = lastedit.rowindex;
                      now = new Date();
                      lastedit = null;
                      $("#jqxgrid").jqxGrid('setcellvalue', rowindex, 'inventory_date', now);
                      row['inventory_date'] = now;
                    }  
                    lastedit = null;
                },
                deleterow: function (rowid, rowdata, commit) {
                },
            };
            var dataAdapter = new $.jqx.dataAdapter(source); 
            // create jqxgrid.
            $("#jqxgrid").jqxGrid(
            {
                columnsresize: true,
                columnsreorder: true,
                editable: true,
                width: '100%',
                height: 550,
                source: dataAdapter,
                theme: theme,
                selectionmode: 'multiplecellsadvanced',
                sortable: true,
                filterable: true,
                groupable: true,
                altrows: true,
                ready: function () {
                    $('#jqxgrid').jqxGrid('autoresizecolumns');
                    },
                columns: [
                    { text: 'category',    datafield: 'category', width:90  },
                    { text: 'name',       datafield: 'name',  width:210},
                    { text: 'bin',        datafield: 'bin', width:60  },
                    { text: 'listorder',  datafield: 'listorder',  columntype: 'numberinput' , width:60 },
                    { text: 'wholesale', datafield: 'wholesale_price', columntype: 'floatinput' , width: 60 },
                    { text: 'retail price',  datafield: 'retail_price',  columntype: 'floatinput' , width:60 },
                    { text: 'qtprice',    datafield: 'qtprice',    columntype: 'numberinput' , width: 60 },
                    { text: 'scalable',    datafield: 'scalable', columntype: 'checkbox', width: 30},
                    { text: 'add_on',    datafield: 'add_on', columntype: 'checkbox', width: 30},
                    { text: 'tax',  datafield: 'tax', width:90 },
                    { text: 'supplier',   datafield: 'supplier', width:90 },
                    { text: 'upc',   datafield: 'upc'},
                    { text: 'estimated_units_remaining', datafield: 'estimated_units_remaining', editable: false , width:90 }, 
                    { text: 'units_in_stock',datafield: 'units_in_stock', columntype: 'floatinput' , width:90 },
                    { text: 'inventory_date',datafield: 'inventory_date', columntype: 'datetimeinput', cellsformat: 'yyyy-MM-dd', width:90},
                    { text: 'subcategory', datafield: 'subcategory', width:60  },
                    { text: 'description',  datafield: 'description',
                        cellbeginedit: function (row) {
                     // open the popup window when the user clicks a button.
                         editrow = row;
                         var offset = $("#jqxgrid").offset();
                         $("#popupWindow").jqxWindow({ position: { x: parseInt(offset.left) + 60, y: parseInt(offset.top) + 60 } });
                         // get the clicked row's data and initialize the input fields.
                         var dataRecord = $("#jqxgrid").jqxGrid('getrowdata', editrow);
                         $("#customTextArea").val(dataRecord.description);
                         // show the popup window.
                         $("#popupWindow").jqxWindow('open');
                         return false;
                      }
                    },
                    { text: 'mynotes', datafield: 'mynotes', width:150  },
                ]
            });
            // initialize the popup window and buttons.
            $("#popupWindow").jqxWindow({
                width: 450, height: 400, resizable: false,  isModal: true, autoOpen: false, cancelButton: $("#Cancel"), modalOpacity: 0.01           
            });

            $("#popupWindow").on('open', function () {
                $('#jqxgrid').jqxGrid('focus');//.jqxInput('selectAll');
            });
         
            $("#Cancel").jqxButton({ theme: theme });
            $("#Save").jqxButton({ theme: theme });

            // update the edited row when the user clicks the 'Save' button.
            $("#Save").click(function () {
                if (editrow >= 0) {
                    var rowID = $('#jqxgrid').jqxGrid('getrowid', editrow);
                    var dataRecord = $("#jqxgrid").jqxGrid('getrowdata', editrow);
                    dataRecord.description = customTextArea.value;
                    lastedit = {datafield: 'description', value: customTextArea.value, rowindex: rowID};
                    console.log('click ' + JSON.stringify(dataRecord));
                    $('#jqxgrid').jqxGrid('updaterow', rowID, dataRecord);
                    $("#popupWindow").jqxWindow('hide');
                    customTextArea.value = null;
                }
            });

            $("#jqxgrid").on('cellendedit', function (event) {
                lastedit = event.args;
            });


            // create new row.
            function newrow() {

                //new rows will have the supercategory of row 0,
                //since we assume you can only edit one
                //supercategory at a time and the query will have
                //returned only things within one supercategory
                //and that this is the supercategory of thing you
                //now want to create as a new item
               
                var supercat = $("#jqxgrid").jqxGrid('getcellvalue', 0, 'supercategory');
                commit = $("#jqxgrid").jqxGrid('addrow', 0, {supercategory: supercat});
            }


            $('#submiteditsbutton').jqxButton({ height: 25, theme: theme });
            $('#submiteditsbutton').click(function () {
                doit = confirm(JSON.stringify(edits) + '\nNew rows:\n'+JSON.stringify(newrows));
                // synchronize with the server - send update command
                // call commit with parameter true if the synchronization with the server is successful 
                // and with parameter false if the synchronization failed.
                if (doit)
                {
                  $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: "inventory.py/update",
                    data: {'edits' : JSON.stringify(edits), 'newrows':JSON.stringify(newrows)},
                    cache: false,
                    success: function (newids, status, xhr) {
                        // update command is executed.
                        edits={};
                        newrows={};
                        for(var idx in newids)
                        {
                          var datarow = $("#jqxgrid").jqxGrid('getrowdata', idx);
                          datarow.id = newids[idx];
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        document.write("<p>"+textStatus + ":::" + errorThrown + "</p>" + jqXHR.responseText)
                        alert(textStatus + ":::" + errorThrown + "\n" + jqXHR.responseText);
			                  errWindow = window.open("","MsgWindow","width=200,height=100");
                        errWindow.document.write("<p>"+textStatus + ":::" + errorThrown + "</p>" + jqXHR.responseText);
                        commit(false);
                    }
                  });
                }
            });
            $('#printinventorybutton').click(function () {
                  console.log(query); //window.location.search.match(/[^\?].*$/g));
                  $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: "print_wine_inventory.py/go",
                    data: {'query': ''+query},
                    cache: false,
                    success: function (pwi_data, pwi_status, pwi_xhr) {
			$.ajax({
			    type: "GET",
			    datatype: "json",
			    url: "config.py/get",
			    cache: false,
			    success: function (cfg_data, cfg_status, cfg_xhr) {
                              cfg_data = JSON.parse(cfg_data);
			      print(pwi_data, cfg_data.printer.ipaddr, cfg_data.printer.devid, cfg_data.printer.timeout);
			    },
			    error: err_page
                  	});
                    },
                    error: err_page
                  });
            });

            $("#jqxgrid").on("bindingcomplete", function (event) {
            // add one blank row at the end to start for new
            // items to be entered. 
            // when that one is editted, we'll add another, and so on.
              newrow();
            });

        });

	function err_page(jqxhr, textstatus, errorthrown) {
	  //console.log(textstatus + ":::" + errorthrown + "\n" + jqxhr.responsetext);
	  document.write("<p>"+textstatus + ":::" + errorthrown + "</p>" + jqxhr.responsetext)
			  errwindow = window.open("","msgwindow","width=200,height=100");
	  errwindow.document.write("<p>"+textstatus + ":::" + errorthrown + "</p>" + jqxhr.responsetext);
        }
    </script>
</head>
<body class='default'>
        <center><input value="submit changes" id="submiteditsbutton" type="button" style='margin:20px' />
        <input value="print inventory" id="printinventorybutton" type="button" style='margin:20px' />
        </center>
        <div id="jqxgrid">
        </div>
       <div id="popupWindow">
            <div>Edit</div>
            <div style="overflow: hidden;">
              <textarea rows=20 cols=50 id="customTextArea"></textarea>
              <input style="margin-right: 5px;" type="button" id="Save" value="Save" /><input id="Cancel" type="button" value="Cancel" />
            </div>
       </div>
</body>
</html>
